steps:
  - id: 'Descriptografar service-account-storage.json.env'
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - kms
      - decrypt
      - --ciphertext-file=./storage/credentials/google/service-account-storage.json.enc
      - --plaintext-file=./storage/credentials/google/service-account-storage.json
      - --location=global
      - --keyring=testing-lesson
      - --key=service-account

  - id: 'Rodando docker-compose'
    name: 'gcr.io/$PROJECT_ID/docker-compose'
    args: ['-f', 'docker-compose.prod.yaml', 'up', '-d']
    env:
      - GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID
      - GOOGLE_CLOUD_KEY_FILE=service-account-storage.json
      - GOOGLE_CLOUD_STORAGE_BUCKET=codeflix-videos
      - TEST_PROD=true

  - id: 'Rodando chown'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', '-u', 'root', 'php', 'chown', '-R', 'www-data:www-data', '.']

  - id: 'Rodando composer'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'php', 'composer', 'install']

  - id: 'Copiando .env'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'php', 'cp', '.env.example', '.env']

  - id: 'Copiando .env.testing'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'php', 'cp', '.env.testing.example', '.env.testing']

  - id: 'Rodando key:generate'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'php', 'php', 'artisan', 'key:generate']

  - id: 'Rodando migrations'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'php', 'php', 'artisan', 'migrate']

  - id: 'Rodando storage:link'
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'exec', '-t', 'php', 'php', 'artisan', 'storage:link' ]

  - id: 'Rodando PhpUnit'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'php', 'php', 'vendor/bin/phpunit', '-c', 'phpunit.xml']
